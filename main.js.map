{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project/./src/components/api.js","webpack://mesto-project/./src/components/card.js","webpack://mesto-project/./src/components/modal.js","webpack://mesto-project/./src/components/validate.js","webpack://mesto-project/./src/scripts/index.js"],"sourcesContent":["const config = {\r\n    baseUrl: \"https://nomoreparties.co/v1/wff-cohort-18\",\r\n    headers: {\r\n      authorization: 'b6eedff2-2ceb-4202-a3f5-88562f5602a9',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n\r\n  function getResponseData(res) {\r\n    if(!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n    return res.json();\r\n  }\r\n  \r\n  //загрузка информации о пользователе\r\n  export function loadUserInfo() {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: config.headers.authorization\r\n      }\r\n    })\r\n    .then((res) => getResponseData(res))\r\n  }\r\n  \r\n  //загрузка карточек\r\n  export function loadCards() {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: config.headers.authorization\r\n      }\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //редактирование профиля\r\n  export function saveProfileData(profileName, profileDescription) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: config.headers.authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: `${profileName}`,\r\n        about: `${profileDescription}`\r\n      })\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //добавление карточки\r\n  export function addCard(cardName, cardLink) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: config.headers.authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: `${cardName}`,\r\n        link: `${cardLink}`\r\n      })\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //удаление карточки\r\n  export function removeCard(cardId) {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: config.headers.authorization\r\n      }\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //поставить лайк карточке\r\n  export function likeCard(cardId) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: config.headers.authorization\r\n      }\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //убрать лайк с карточки\r\n  export function unlikeCard(cardId) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: config.headers.authorization\r\n      }\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //смена аватарки пользователя\r\n  export function changeAvatar(url) {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: config.headers.authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: `${url}`\r\n      })\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }","import { likeCard, unlikeCard, removeCard } from \"./api\"; \r\n//Темплейт карточки \r\nconst cardTemplate = document.querySelector('#card-template').content; \r\n\r\n//Функция создания карточки \r\nexport function createCard(cardData, showImage, userId, cardId) { \r\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true); \r\n  const cardImage = cardElement.querySelector('.card__image'); \r\n  const cardTitle = cardElement.querySelector('.card__title'); \r\n  const deleteButton = cardElement.querySelector('.card__delete-button'); \r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikes = cardElement.querySelector('.like_counter');\r\n  cardLikes.textContent = cardData.likes.length;\r\n  cardId = cardData._id;\r\n\r\n  cardImage.src = cardData.link; \r\n  cardTitle.textContent = cardData.name; \r\n  cardImage.alt = cardData.name; \r\n  if(userId !== cardData.owner._id) { \r\n    deleteButton.remove() \r\n  } \r\n\r\n  const likers = cardData.likes; \r\n \r\n  //если лайк предварительно стоит, то сердечко черное \r\n  const hasId = likers.some(o => o._id === userId); \r\n  if(hasId) { \r\n    likeButton.classList.add('card__like-button_is-active'); \r\n  } \r\n \r\n  //обработчик клика на кнопку лайка \r\n  likeButton.addEventListener('click', function() {\r\n    cardLikeToggle(cardId, likeButton, cardLikes)\r\n  })\r\n\r\n  //обработчик кнопки удаления\r\n  deleteButton.addEventListener('click', function(evt) {\r\n    cardDelete(cardId, deleteButton);\r\n  })\r\n \r\n  cardImage.addEventListener('click', showImage) \r\n \r\n  return cardElement; \r\n}\r\n\r\n  //обработка добавления/удаления лайка \r\n  export function cardLikeToggle(cardId, likeButton, cardLikes) {\r\n    if((likeButton.classList.contains('card__like-button_is-active'))) {\r\n      unlikeCard(cardId)\r\n      .then(data => { \r\n        likeButton.classList.remove('card__like-button_is-active'); \r\n        cardLikes.textContent = data.likes.length;\r\n      })\r\n      .catch(err => console.log('Ошибка при снятии лайка'))\r\n    } \r\n    else { \r\n      likeCard(cardId) \r\n      .then(data => { \r\n        likeButton.classList.add('card__like-button_is-active'); \r\n        cardLikes.textContent = data.likes.length; \r\n      }) \r\n      .catch(err => console.log('Ошибка при постановке лайка')) \r\n    }\r\n  }\r\n\r\n  export function cardDelete(cardId, deleteButton) {\r\n    removeCard(cardId)\r\n      .then(res => { \r\n        deleteButton.closest('.places__item').remove() \r\n        console.log(`Удалена карточка с ID: ${cardId}`) \r\n      }) \r\n      .catch(err => console.log('Ошибка удаления карточки'))\r\n  }","//функция открытия попапа\r\nexport function openPopup(popup) {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closePopupEsc);\r\n  popup.addEventListener('click', closePopupOverlay);\r\n}\r\n\r\n//функция закрытия попапа\r\nexport function closePopup(popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closePopupEsc);\r\n  popup.removeEventListener('click', closePopupOverlay);\r\n}\r\n\r\n//фукнция закрытия попапа на Esc\r\nfunction closePopupEsc(evt) {\r\n  if (evt.key === 'Escape'){\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    closePopup(openedPopup);\r\n  }\r\n}\r\n\r\n//функция закрытия попапа на оверлей\r\nfunction closePopupOverlay(evt) {\r\n  if (evt.target === evt.currentTarget) {\r\n    closePopup(evt.currentTarget);\r\n  }\r\n}","//функция добавления класса с ошибкой \r\nfunction showInputError (formElement, inputElement, errorMessage, configValidation) { \r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n  inputElement.classList.add(configValidation.inputErrorClass); \r\n  errorElement.textContent = errorMessage; \r\n  errorElement.classList.add(configValidation.errorClass); \r\n} \r\n \r\n//функция удаления класса с ошибкой \r\nexport function hideInputError (formElement, inputElement, configValidation) { \r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n  inputElement.classList.remove(configValidation.inputErrorClass); \r\n  errorElement.classList.remove(configValidation.errorClass); \r\n  errorElement.textContent = ''; \r\n  inputElement.setCustomValidity(''); \r\n} \r\n \r\n//функция проверки на валидность \r\nfunction isValid(formElement, inputElement, configValidation) { \r\n  if(inputElement.validity.patternMismatch) { \r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage) \r\n  } else { \r\n    inputElement.setCustomValidity(''); \r\n  } \r\n \r\n  if(!inputElement.validity.valid) { \r\n    showInputError(formElement, inputElement, inputElement.validationMessage, configValidation); \r\n  } \r\n  else { \r\n    hideInputError(formElement, inputElement, configValidation); \r\n  } \r\n} \r\n \r\n//вешаем обработчики событий на каждый input выбранной формы \r\nexport function setEventListeners(formElement, configValidation) { \r\n  const inputList = Array.from(formElement.querySelectorAll(configValidation.inputSelector)); \r\n  const buttonElement = formElement.querySelector(configValidation.submitButtonSelector); \r\n  toggleButtonState(inputList, buttonElement, configValidation); \r\n  inputList.forEach( function (inputElement) { \r\n    inputElement.addEventListener('input', function() { \r\n      isValid(formElement, inputElement, configValidation); \r\n      toggleButtonState(inputList, buttonElement, configValidation); \r\n    }) \r\n  }) \r\n} \r\n \r\n//вешаем обработчики событий на каждую форму \r\nexport function enableValidation(configValidation) { \r\n  const formList = Array.from(document.querySelectorAll(configValidation.formSelector)); \r\n  formList.forEach(function (formElement) { \r\n    setEventListeners(formElement, configValidation); \r\n  }) \r\n} \r\n \r\n//проверка на валидность всех полей формы \r\nfunction hasInvalidInput(inputList) { \r\n  return inputList.some(function(inputElement) { \r\n    return !inputElement.validity.valid; \r\n  }) \r\n} \r\n \r\n//активируем/деактивируем кнопку \r\nfunction toggleButtonState(inputList, buttonElement, configValidation) { \r\n  if(hasInvalidInput(inputList)) { \r\n    buttonElement.disabled = true; \r\n    buttonElement.classList.add(configValidation.inactiveButtonClass); \r\n  } \r\n  else { \r\n    buttonElement.disabled = false; \r\n    buttonElement.classList.remove(configValidation.inactiveButtonClass); \r\n  } \r\n} \r\n \r\n//очистка ошибок валидации \r\nexport function clearValidation(formElement, configValidation) { \r\n   \r\n  const submitButton = formElement.querySelector(configValidation.submitButtonSelector); \r\n  const inputSelectors = Array.from(formElement.querySelectorAll(configValidation.inputSelector)); \r\n  const errors = formElement.querySelectorAll(configValidation.errorClass); \r\n \r\n  toggleButtonState(inputSelectors, submitButton, configValidation); \r\n \r\n  inputSelectors.forEach(function (input) { \r\n    hideInputError(formElement, input, configValidation); \r\n  }) \r\n \r\n  errors.forEach(function (error) { \r\n    error.textContent = ''; \r\n  }) \r\n} ","import '../pages/index.css'; \r\nimport {createCard} from '../components/card.js'; \r\nimport {openPopup, closePopup} from '../components/modal.js'; \r\nimport { enableValidation, clearValidation } from '../components/validate.js'; \r\nimport { loadUserInfo, loadCards, saveProfileData, addCard, changeAvatar } from '../components/api.js'; \r\n \r\nconst popupList = document.querySelectorAll('.popup'); \r\n//добавляем каждому попапу анимацию \r\npopupList.forEach(function(popup){ \r\n  popup.classList.add('popup_is-animated'); \r\n}) \r\n \r\n//задаем глобальные переменные \r\nconst cardsConteiner = document.querySelector('.places__list');\r\nconst avatarButton = document.querySelector('.profile__image'); \r\nconst editButton = document.querySelector('.profile__edit-button'); \r\nconst addButton = document.querySelector('.profile__add-button'); \r\nconst popupEdit = document.querySelector('.popup_type_edit'); \r\nconst popupNewCard = document.querySelector('.popup_type_new-card'); \r\nconst popupImage = document.querySelector('.popup_type_image'); \r\nconst popupAvatar = document.querySelector('.popup_type_change-avatar'); \r\n \r\n//задаем массив всех кнопок закрытия попапа \r\nconst closePopupButtons = document.querySelectorAll('.popup__close'); \r\nconst crossIcons = Array.from(closePopupButtons); \r\n \r\n//каждому крестику задаем обработчик событий на клик \r\ncrossIcons.forEach(function (icon) { \r\n  icon.addEventListener('click', function(){ \r\n    closePopup(icon.closest('.popup')); \r\n  }); \r\n}); \r\n \r\n//работаем со значением формы для смены аватарки \r\nconst changeAvatarForm = document.forms.change_avatar; \r\nconst inputAvatarURL = changeAvatarForm.elements.link; \r\n \r\n//работаем со значением формы для редактирования профиля \r\nconst editNameForm = document.forms.edit_profile; \r\nconst inputName = editNameForm.elements.name; \r\nconst inputJob = editNameForm.elements.description; \r\nconst profileTitle = document.querySelector('.profile__title'); \r\nconst profileDescription = document.querySelector('.profile__description'); \r\n \r\n//задаем значения полям формы для редактирования профиля \r\nfunction setValuesEditForm () { \r\n  inputName.value = profileTitle.textContent; \r\n  inputJob.value = profileDescription.textContent; \r\n} \r\n \r\n//работаем со значением формы для добавления карточки \r\nconst newPlaceForm = document.forms.new_place; \r\nconst inputPlace = newPlaceForm.elements.place_name; \r\nconst inputURL = newPlaceForm.elements.link; \r\n \r\n//работаем с модальным окном-изображением карточки \r\nconst imagePopup = document.querySelector('.popup__image'); \r\nconst captionPopup = document.querySelector('.popup__caption'); \r\n//Функция показа попапа с картинкой \r\nfunction showImage(evt) { \r\n  imagePopup.src = evt.target.src; \r\n  imagePopup.alt = evt.target.alt; \r\n  captionPopup.textContent = evt.target.alt; \r\n \r\n  if(evt.target.classList.contains('card__image')) { \r\n    openPopup(popupImage); \r\n  } \r\n} \r\n \r\n//отслеживание кликов по модальному окну редактирования профиля \r\neditButton.addEventListener('click', function() { \r\n  openPopup(popupEdit); \r\n  clearValidation(profileForm, validationConfig); \r\n  setValuesEditForm(); \r\n}); \r\neditNameForm.addEventListener('submit', function(evt){ \r\n  renderLoading(true, popupEdit); \r\n  evt.preventDefault();\r\n  saveProfileData(inputName.value, inputJob.value) \r\n  .then(res => { \r\n    profileTitle.textContent = res.name; \r\n    profileDescription.textContent = res.about; \r\n    closePopup(popupEdit)\r\n  }) \r\n  .catch(err => console.log('Ошибка обновления данных пользователя')) \r\n  .finally(res => { \r\n    renderLoading(false, popupEdit) \r\n  })  \r\n}); \r\n \r\n//отслеживание кликов по модальному окну добавления карточки \r\naddButton.addEventListener('click', function() { \r\n  openPopup(popupNewCard); \r\n  newPlaceForm.reset(); \r\n  clearValidation(placeForm, validationConfig); \r\n}); \r\nnewPlaceForm.addEventListener('submit', function(evt) { \r\n  evt.preventDefault(); \r\n  renderLoading(true, popupNewCard); \r\n  addCard(inputPlace.value, inputURL.value) \r\n  .then(data => { \r\n    const myId = data.owner._id; \r\n    const cardId = data._id; \r\n    const newCard = createCard(data, showImage, myId, cardId); \r\n    cardsConteiner.prepend(newCard); \r\n    closePopup(popupNewCard) \r\n  }) \r\n  .catch(err => { \r\n    console.log('Ошибка при добавлении карточки:', err) \r\n  }) \r\n  .finally(res => { \r\n    renderLoading(false, popupNewCard) \r\n  }) \r\n}) \r\n \r\n//отслеживание кликов по модальному окну редактирования аватарки \r\navatarButton.addEventListener('click', function() { \r\n  openPopup(popupAvatar); \r\n  changeAvatarForm.reset(); \r\n  clearValidation(changeAvatarForm, validationConfig); \r\n}) \r\n \r\nchangeAvatarForm.addEventListener('submit', function(evt) { \r\n  evt.preventDefault(); \r\n  renderLoading(true, popupAvatar); \r\n  changeAvatar(inputAvatarURL.value) \r\n  .then(data => { \r\n    const profileAvatar = document.querySelector('.profile__image'); \r\n    profileAvatar.setAttribute('style', `background-image: url(${data})`) \r\n    closePopup(popupAvatar) \r\n  }) \r\n  .catch(err => console.log('Ошибка при обновлении аватара: ', err)) \r\n  .finally(res => { \r\n    renderLoading(false, popupAvatar); \r\n  }) \r\n}) \r\n \r\n\r\n//валидация для форм \r\nconst profileForm = document.querySelector('.edit_profile_form'); \r\nconst placeForm = document.querySelector('.new_place_form'); \r\n\r\nconst validationConfig = { \r\n  formSelector: '.popup__form', \r\n  inputSelector: '.popup__input', \r\n  submitButtonSelector: '.popup__button', \r\n  inactiveButtonClass: 'popup__button_inactive', \r\n  inputErrorClass: 'popup__input_type_error', \r\n  errorClass: 'popup-input-error_active' \r\n} \r\n\r\nenableValidation(validationConfig); \r\n \r\n//запросы к серверу \r\n \r\nPromise.all([loadUserInfo(), loadCards()]) \r\n.then(([userInfo, cardsArr]) => { \r\n  const profileAvatar = document.querySelector('.profile__image'); \r\n  profileAvatar.setAttribute('style', `background-image: url(${userInfo.avatar})`) \r\n  profileTitle.textContent = userInfo.name; \r\n  profileDescription.textContent = userInfo.about; \r\n  const myId = userInfo._id; \r\n   \r\n  cardsArr.forEach(function (cardData) { \r\n    const card = createCard(cardData, showImage, myId, cardId); \r\n    cardsConteiner.append(card); \r\n    const cardLikes = card.querySelector('.like_counter');\r\n    cardLikes.textContent = cardData.likes.length; \r\n    const cardId = cardData._id;\r\n  }) \r\n}) \r\n.catch((err) => { \r\n  console.log('Запрос не выполнен: ', err) \r\n}) \r\n \r\n//уведомление о загрузке \r\nfunction renderLoading(isLoading, popup) { \r\n  const submitButton = popup.querySelector('.popup__button'); \r\n  if(isLoading) { \r\n    submitButton.textContent = 'Сохранение...'; \r\n  } \r\n  else { \r\n    submitButton.textContent = 'Сохранить'; \r\n  } \r\n} "],"names":["config","authorization","getResponseData","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","showImage","userId","cardId","cardElement","cloneNode","cardImage","cardTitle","deleteButton","likeButton","cardLikes","textContent","likes","length","_id","src","link","name","alt","owner","remove","some","o","classList","add","addEventListener","contains","fetch","method","headers","then","unlikeCard","data","catch","err","console","log","likeCard","cardLikeToggle","evt","removeCard","closest","cardDelete","openPopup","popup","closePopupEsc","closePopupOverlay","closePopup","removeEventListener","key","target","currentTarget","hideInputError","formElement","inputElement","configValidation","errorElement","id","inputErrorClass","errorClass","setCustomValidity","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","submitButton","submitButtonSelector","inputSelectors","Array","from","querySelectorAll","inputSelector","errors","forEach","input","error","cardsConteiner","avatarButton","editButton","addButton","popupEdit","popupNewCard","popupImage","popupAvatar","closePopupButtons","icon","changeAvatarForm","forms","change_avatar","inputAvatarURL","elements","editNameForm","edit_profile","inputName","inputJob","description","profileTitle","profileDescription","newPlaceForm","new_place","inputPlace","place_name","inputURL","imagePopup","captionPopup","profileForm","validationConfig","value","renderLoading","preventDefault","profileName","body","JSON","stringify","about","saveProfileData","finally","reset","placeForm","cardName","cardLink","newCard","prepend","url","avatar","setAttribute","formSelector","isLoading","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","all","_ref","_ref2","userInfo","cardsArr","myId","card","append"],"sourceRoot":""}