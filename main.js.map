{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project/./src/components/api.js","webpack://mesto-project/./src/components/card.js","webpack://mesto-project/./src/components/modal.js","webpack://mesto-project/./src/components/validate.js","webpack://mesto-project/./src/scripts/index.js"],"sourcesContent":["const config = {\r\n    baseUrl: \"https://nomoreparties.co/v1/wff-cohort-18\",\r\n    headers: {\r\n      authorization: 'b6eedff2-2ceb-4202-a3f5-88562f5602a9',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n\r\n  function getResponseData(res) {\r\n    if(!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n    return res.json();\r\n  }\r\n  \r\n  //загрузка информации о пользователе\r\n  export function loadUserInfo() {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: config.headers.authorization\r\n      }\r\n    })\r\n    .then((res) => getResponseData(res))\r\n  }\r\n  \r\n  //загрузка карточек\r\n  export function loadCards() {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: config.headers.authorization\r\n      }\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //редактирование профиля\r\n  export function saveProfileData(profileName, profileDescription) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n        name: `${profileName}`,\r\n        about: `${profileDescription}`\r\n      })\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //добавление карточки\r\n  export function addCard(cardName, cardLink) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n        name: `${cardName}`,\r\n        link: `${cardLink}`\r\n      })\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //удаление карточки\r\n  export function removeCard(cardId) {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: config.headers.authorization\r\n      }\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //поставить лайк карточке\r\n  export function likeCard(cardId) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: config.headers.authorization\r\n      }\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //убрать лайк с карточки\r\n  export function unlikeCard(cardId) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: config.headers.authorization\r\n      }\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }\r\n  \r\n  //смена аватарки пользователя\r\n  export function changeAvatar(url) {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n        avatar: `${url}`\r\n      })\r\n    })\r\n    .then(res => getResponseData(res))\r\n  }","import { likeCard, unlikeCard, removeCard } from \"./api\"; \r\n//Темплейт карточки \r\nconst cardTemplate = document.querySelector('#card-template').content; \r\n\r\n//Функция создания карточки \r\nexport function createCard(cardData, showImage, userId, cardId) { \r\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true); \r\n  const cardImage = cardElement.querySelector('.card__image'); \r\n  const cardTitle = cardElement.querySelector('.card__title'); \r\n  const deleteButton = cardElement.querySelector('.card__delete-button'); \r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikes = cardElement.querySelector('.like_counter');\r\n  cardLikes.textContent = cardData.likes.length;\r\n  cardId = cardData._id;\r\n\r\n  cardImage.src = cardData.link; \r\n  cardTitle.textContent = cardData.name; \r\n  cardImage.alt = cardData.name; \r\n  if(userId !== cardData.owner._id) { \r\n    deleteButton.remove() \r\n  } \r\n\r\n  const likers = cardData.likes; \r\n \r\n  //если лайк предварительно стоит, то сердечко черное \r\n  const hasId = likers.some(o => o._id === userId); \r\n  if(hasId) { \r\n    likeButton.classList.add('card__like-button_is-active'); \r\n  } \r\n \r\n  //обработчик клика на кнопку лайка \r\n  likeButton.addEventListener('click', function() {\r\n    cardLikeToggle(cardId, likeButton, cardLikes)\r\n  })\r\n\r\n  //обработчик кнопки удаления\r\n  deleteButton.addEventListener('click', function(evt) {\r\n    cardDelete(cardId, deleteButton);\r\n  })\r\n \r\n  cardImage.addEventListener('click', showImage) \r\n \r\n  return cardElement; \r\n}\r\n\r\n  //обработка добавления/удаления лайка \r\n  export function cardLikeToggle(cardId, likeButton, cardLikes) {\r\n    if((likeButton.classList.contains('card__like-button_is-active'))) {\r\n      unlikeCard(cardId)\r\n      .then(data => { \r\n        likeButton.classList.remove('card__like-button_is-active'); \r\n        cardLikes.textContent = data.likes.length;\r\n      })\r\n      .catch(err => console.log('Ошибка при снятии лайка'))\r\n    } \r\n    else { \r\n      likeCard(cardId) \r\n      .then(data => { \r\n        likeButton.classList.add('card__like-button_is-active'); \r\n        cardLikes.textContent = data.likes.length; \r\n      }) \r\n      .catch(err => console.log('Ошибка при постановке лайка')) \r\n    }\r\n  }\r\n\r\n  export function cardDelete(cardId, deleteButton) {\r\n    removeCard(cardId)\r\n      .then(res => { \r\n        deleteButton.closest('.places__item').remove() \r\n        console.log(`Удалена карточка с ID: ${cardId}`) \r\n      }) \r\n      .catch(err => console.log('Ошибка удаления карточки'))\r\n  }","//функция открытия попапа\r\nexport function openPopup(popup) {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closePopupEsc);\r\n  popup.addEventListener('click', closePopupOverlay);\r\n}\r\n\r\n//функция закрытия попапа\r\nexport function closePopup(popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closePopupEsc);\r\n  popup.removeEventListener('click', closePopupOverlay);\r\n}\r\n\r\n//фукнция закрытия попапа на Esc\r\nfunction closePopupEsc(evt) {\r\n  if (evt.key === 'Escape'){\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    closePopup(openedPopup);\r\n  }\r\n}\r\n\r\n//функция закрытия попапа на оверлей\r\nfunction closePopupOverlay(evt) {\r\n  if (evt.target === evt.currentTarget) {\r\n    closePopup(evt.currentTarget);\r\n  }\r\n}","//функция добавления класса с ошибкой \r\nfunction showInputError (formElement, inputElement, errorMessage, configValidation) { \r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n  inputElement.classList.add(configValidation.inputErrorClass); \r\n  errorElement.textContent = errorMessage; \r\n  errorElement.classList.add(configValidation.errorClass); \r\n} \r\n \r\n//функция удаления класса с ошибкой \r\nexport function hideInputError (formElement, inputElement, configValidation) { \r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n  inputElement.classList.remove(configValidation.inputErrorClass); \r\n  errorElement.classList.remove(configValidation.errorClass); \r\n  errorElement.textContent = ''; \r\n  inputElement.setCustomValidity(''); \r\n} \r\n \r\n//функция проверки на валидность \r\nfunction isValid(formElement, inputElement, configValidation) { \r\n  if(inputElement.validity.patternMismatch) { \r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage) \r\n  } else { \r\n    inputElement.setCustomValidity(''); \r\n  } \r\n \r\n  if(!inputElement.validity.valid) { \r\n    showInputError(formElement, inputElement, inputElement.validationMessage, configValidation); \r\n  } \r\n  else { \r\n    hideInputError(formElement, inputElement, configValidation); \r\n  } \r\n} \r\n \r\n//вешаем обработчики событий на каждый input выбранной формы \r\nexport function setEventListeners(formElement, configValidation) { \r\n  const inputList = Array.from(formElement.querySelectorAll(configValidation.inputSelector)); \r\n  const buttonElement = formElement.querySelector(configValidation.submitButtonSelector); \r\n  toggleButtonState(inputList, buttonElement, configValidation); \r\n  inputList.forEach( function (inputElement) { \r\n    inputElement.addEventListener('input', function() { \r\n      isValid(formElement, inputElement, configValidation); \r\n      toggleButtonState(inputList, buttonElement, configValidation); \r\n    }) \r\n  }) \r\n} \r\n \r\n//вешаем обработчики событий на каждую форму \r\nexport function enableValidation(configValidation) { \r\n  const formList = Array.from(document.querySelectorAll(configValidation.formSelector)); \r\n  formList.forEach(function (formElement) { \r\n    setEventListeners(formElement, configValidation); \r\n  }) \r\n} \r\n \r\n//проверка на валидность всех полей формы \r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n \r\n//активируем/деактивируем кнопку \r\nfunction toggleButtonState(inputList, buttonElement, validationConfig){\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n \r\n//очистка ошибок валидации \r\nexport function clearValidation(formElement, validationConfig) {\r\n  const inputListClear = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  inputListClear.forEach((inputElement) =>{\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n    toggleButtonState(inputListClear, buttonElement, validationConfig);\r\n  });\r\n};","import '../pages/index.css'; \r\nimport { createCard } from '../components/card.js'; \r\nimport { openPopup, closePopup } from '../components/modal.js'; \r\nimport { enableValidation, clearValidation } from '../components/validate.js'; \r\nimport { loadUserInfo, loadCards, saveProfileData, addCard, changeAvatar } from '../components/api.js'; \r\n\r\n// Добавляем каждому попапу анимацию\r\nconst popupList = document.querySelectorAll('.popup'); \r\npopupList.forEach(function(popup) { \r\n  popup.classList.add('popup_is-animated'); \r\n}); \r\n\r\n// Глобальные переменные\r\nconst cardsContainer = document.querySelector('.places__list');\r\nconst avatarButton = document.querySelector('.profile__image'); \r\nconst editButton = document.querySelector('.profile__edit-button'); \r\nconst addButton = document.querySelector('.profile__add-button'); \r\nconst popupEdit = document.querySelector('.popup_type_edit'); \r\nconst popupNewCard = document.querySelector('.popup_type_new-card'); \r\nconst popupImage = document.querySelector('.popup_type_image'); \r\nconst popupAvatar = document.querySelector('.popup_type_change-avatar'); \r\nconst closePopupButtons = document.querySelectorAll('.popup__close'); \r\nconst changeAvatarForm = document.forms.change_avatar; \r\nconst inputAvatarURL = changeAvatarForm.elements.link; \r\nconst editNameForm = document.forms.edit_profile; \r\nconst inputName = editNameForm.elements.name; \r\nconst inputJob = editNameForm.elements.description; \r\nconst profileTitle = document.querySelector('.profile__title'); \r\nconst profileDescription = document.querySelector('.profile__description'); \r\nconst newPlaceForm = document.forms.new_place; \r\nconst inputPlace = newPlaceForm.elements.place_name; \r\nconst inputURL = newPlaceForm.elements.link; \r\nconst imagePopup = document.querySelector('.popup__image'); \r\nconst captionPopup = document.querySelector('.popup__caption'); \r\n\r\n// Обработчики закрытия попапов\r\nclosePopupButtons.forEach(function(icon) { \r\n  icon.addEventListener('click', function() { \r\n    closePopup(icon.closest('.popup')); \r\n  }); \r\n});\r\n\r\n// Установка значений формы для редактирования профиля\r\nfunction setValuesEditForm() { \r\n  inputName.value = profileTitle.textContent; \r\n  inputJob.value = profileDescription.textContent; \r\n}\r\n\r\n// Обработка изменения аватара\r\navatarButton.addEventListener('click', function() { \r\n  openPopup(popupAvatar); \r\n  changeAvatarForm.reset(); \r\n  clearValidation(changeAvatarForm, validationConfig); \r\n});\r\n\r\nchangeAvatarForm.addEventListener('submit', function(evt) { \r\n  evt.preventDefault(); \r\n  renderLoading(true, popupAvatar); \r\n  changeAvatar(inputAvatarURL.value) \r\n    .then(data => { \r\n      avatarButton.style.backgroundImage = `url(${data.avatar})`; \r\n      closePopup(popupAvatar); \r\n    }) \r\n    .catch(err => console.log('Ошибка при обновлении аватара: ', err)) \r\n    .finally(() => { \r\n      renderLoading(false, popupAvatar); \r\n    }); \r\n});\r\n\r\n// Обработка редактирования профиля\r\neditButton.addEventListener('click', function() { \r\n  openPopup(popupEdit); \r\n  clearValidation(profileForm, validationConfig); \r\n  setValuesEditForm(); \r\n});\r\n\r\neditNameForm.addEventListener('submit', function(evt) { \r\n  evt.preventDefault(); \r\n  renderLoading(true, popupEdit); \r\n  saveProfileData(inputName.value, inputJob.value) \r\n    .then(res => { \r\n      profileTitle.textContent = res.name; \r\n      profileDescription.textContent = res.about; \r\n      closePopup(popupEdit); \r\n    }) \r\n    .catch(err => console.log('Ошибка обновления данных пользователя: ', err)) \r\n    .finally(() => { \r\n      renderLoading(false, popupEdit); \r\n    }); \r\n});\r\n\r\n// Обработка добавления новой карточки\r\naddButton.addEventListener('click', function() { \r\n  openPopup(popupNewCard); \r\n  newPlaceForm.reset(); \r\n  clearValidation(placeForm, validationConfig); \r\n});\r\n\r\nnewPlaceForm.addEventListener('submit', function(evt) { \r\n  evt.preventDefault(); \r\n  renderLoading(true, popupNewCard); \r\n  addCard(inputPlace.value, inputURL.value) \r\n    .then(data => { \r\n      const myId = data.owner._id; \r\n      const newCard = createCard(data, showImage, myId, data._id); \r\n      cardsContainer.prepend(newCard); \r\n      closePopup(popupNewCard); \r\n    }) \r\n    .catch(err => console.log('Ошибка при добавлении карточки: ', err)) \r\n    .finally(() => { \r\n      renderLoading(false, popupNewCard); \r\n    }); \r\n});\r\n\r\n// Показ изображения карточки\r\nfunction showImage(evt) { \r\n  imagePopup.src = evt.target.src; \r\n  imagePopup.alt = evt.target.alt; \r\n  captionPopup.textContent = evt.target.alt; \r\n\r\n  if(evt.target.classList.contains('card__image')) { \r\n    openPopup(popupImage); \r\n  } \r\n}\r\n\r\n// Валидация форм\r\nconst profileForm = document.querySelector('.edit_profile_form'); \r\nconst placeForm = document.querySelector('.new_place_form'); \r\n\r\nconst validationConfig = { \r\n  formSelector: '.popup__form', \r\n  inputSelector: '.popup__input', \r\n  submitButtonSelector: '.popup__button', \r\n  inactiveButtonClass: 'popup__button_inactive', \r\n  inputErrorClass: 'popup__input_type_error', \r\n  errorClass: 'popup-input-error_active' \r\n}; \r\n\r\nenableValidation(validationConfig);\r\n\r\n// Загрузка данных пользователя и карточек\r\nPromise.all([loadUserInfo(), loadCards()]) \r\n  .then(([userInfo, cardsArr]) => { \r\n    avatarButton.style.backgroundImage = `url(${userInfo.avatar})`; \r\n    profileTitle.textContent = userInfo.name; \r\n    profileDescription.textContent = userInfo.about; \r\n    const myId = userInfo._id; \r\n\r\n    cardsArr.forEach(function(cardData) { \r\n      const card = createCard(cardData, showImage, myId, cardData._id); \r\n      cardsContainer.append(card); \r\n    }); \r\n  }) \r\n  .catch((err) => { \r\n    console.log('Запрос не выполнен: ', err); \r\n  });\r\n\r\n// Функция уведомления о загрузке\r\nfunction renderLoading(isLoading, popup) { \r\n  const submitButton = popup.querySelector('.popup__button'); \r\n  if(isLoading) { \r\n    submitButton.textContent = 'Сохранение...'; \r\n  } else { \r\n    submitButton.textContent = 'Сохранить'; \r\n  } \r\n}"],"names":["config","baseUrl","headers","authorization","getResponseData","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","showImage","userId","cardId","cardElement","cloneNode","cardImage","cardTitle","deleteButton","likeButton","cardLikes","textContent","likes","length","_id","src","link","name","alt","owner","remove","some","o","classList","add","addEventListener","contains","fetch","method","then","unlikeCard","data","catch","err","console","log","likeCard","cardLikeToggle","evt","removeCard","closest","cardDelete","openPopup","popup","closePopupEsc","closePopupOverlay","closePopup","removeEventListener","key","target","currentTarget","hideInputError","formElement","inputElement","configValidation","errorElement","id","inputErrorClass","errorClass","setCustomValidity","toggleButtonState","inputList","buttonElement","validationConfig","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","inputListClear","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","cardsContainer","avatarButton","editButton","addButton","popupEdit","popupNewCard","popupImage","popupAvatar","closePopupButtons","changeAvatarForm","forms","change_avatar","inputAvatarURL","elements","editNameForm","edit_profile","inputName","inputJob","description","profileTitle","profileDescription","newPlaceForm","new_place","inputPlace","place_name","inputURL","imagePopup","captionPopup","icon","reset","url","preventDefault","renderLoading","value","body","JSON","stringify","avatar","style","backgroundImage","finally","profileForm","profileName","about","saveProfileData","placeForm","cardName","cardLink","newCard","prepend","formSelector","isLoading","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","all","_ref","_ref2","userInfo","cardsArr","myId","card","append"],"sourceRoot":""}