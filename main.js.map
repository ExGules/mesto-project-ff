{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project/./src/components/api.js","webpack://mesto-project/./src/components/card.js","webpack://mesto-project/./src/components/modal.js","webpack://mesto-project/./src/components/validate.js","webpack://mesto-project/./src/scripts/index.js"],"sourcesContent":["export const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-18',\r\n    headers: {\r\n      authorization: 'b6eedff2-2ceb-4202-a3f5-88562f5602a9',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n\r\n// Функция обработки ответа\r\nfunction handleResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  \r\n  // Функция запроса без тела\r\n  function request(url, method) {\r\n    return fetch(configAPI.baseUrl + url, {\r\n      method: method,\r\n      headers: configAPI.headers,\r\n    }).then(handleResponse);\r\n  }\r\n  \r\n  // Функция запроса с телом\r\n  function bodyRequest(url, method, data) {\r\n    return fetch(configAPI.baseUrl + url, {\r\n      method: method,\r\n      headers: configAPI.headers,\r\n      body: JSON.stringify(data),\r\n    }).then(handleResponse);\r\n  }\r\n  \r\n  // Функция запроса информации о пользователе\r\n  function getMyInfoRequest() {\r\n    return request(\"/users/me\", \"GET\");\r\n  }\r\n  \r\n  // Функция запроса информации о карточках\r\n  function getСardsRequest() {\r\n    return request(\"/cards\", \"GET\");\r\n  }\r\n  \r\n  // Функция запроса обновления профиля\r\n  function patchProfileRequest(nameProfile, descriptionProfile) {\r\n    return bodyRequest(\"/users/me\", \"PATCH\", {\r\n      name: nameProfile,\r\n      about: descriptionProfile,\r\n    });\r\n  }\r\n  \r\n  // Функция запроса обновления аватара\r\n  function patchAvatarRequest(avatarLink) {\r\n    return bodyRequest(\"/users/me/avatar\", \"PATCH\", { avatar: avatarLink });\r\n  }\r\n  \r\n  // Функция запроса проверки ссылки на картинку\r\n  function checkImageLinkRequest(link) {\r\n    return fetch(link, {\r\n      method: \"HEAD\",\r\n    }).then((link) => {\r\n      if (link.ok) {\r\n        if (link.headers.get(\"Content-Type\").includes(\"image\")) {\r\n          return Promise.resolve();\r\n        }\r\n  \r\n        return Promise.reject(\"Ссылка не является изображением\");\r\n      }\r\n  \r\n      return Promise.reject(`Ссылка недействительна. Ошибка: ${link.status}`);\r\n    });\r\n  }\r\n  \r\n  // Функция запроса добавления карточки\r\n  function postCardRequest(nameCard, linkCard) {\r\n    return bodyRequest(\"/cards\", \"POST\", { name: nameCard, link: linkCard });\r\n  }\r\n  \r\n  // Функция запроса удаления карточки\r\n  function deleteCardRequest(cardId) {\r\n    return request(`/cards/${cardId}`, \"DELETE\");\r\n  }\r\n  \r\n  // Функция запроса лайка карточки\r\n  function addLikeRequest(dataCard) {\r\n    return request(`/cards/likes/${dataCard._id}`, \"PUT\");\r\n  }\r\n  \r\n  // Функция запроса удаления лайка карточки\r\n  function deleteLikeRequest(dataCard) {\r\n    return request(`/cards/likes/${dataCard._id}`, \"DELETE\");\r\n  }\r\n  \r\n  export {\r\n    getMyInfoRequest,\r\n    getСardsRequest,\r\n    patchProfileRequest,\r\n    patchAvatarRequest,\r\n    checkImageLinkRequest,\r\n    postCardRequest,\r\n    deleteCardRequest,\r\n    addLikeRequest,\r\n    deleteLikeRequest,\r\n  };","import { addLikeRequest, deleteLikeRequest } from \"./api.js\";\r\n\r\n// Темплейт карточки\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// Функция создания карточки\r\nfunction createCard(dataCard, openDeletePopup, openImagePopup, likeCard, myId) {\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\r\n  const cardLikeCount = cardElement.querySelector(\".card__like-count\");\r\n  const cardDeleteButton = cardElement.querySelector(\".card__delete-button\");\r\n\r\n  cardTitle.textContent = dataCard.name;\r\n  cardImage.src = dataCard.link;\r\n  cardImage.alt = dataCard.name;\r\n  cardLikeCount.textContent = dataCard.likes.length;\r\n\r\n  if (hasMyLike(dataCard, myId)) {\r\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n  } else {\r\n    cardLikeButton.classList.remove(\"card__like-button_is-active\");\r\n  }\r\n\r\n  if (dataCard.owner._id === myId) {\r\n    cardElement.dataset.cardId = dataCard._id;\r\n\r\n    cardDeleteButton.addEventListener(\"click\", () => openDeletePopup(dataCard));\r\n  } else {\r\n    cardDeleteButton.remove();\r\n  }\r\n\r\n  cardImage.addEventListener(\"click\", () => openImagePopup(dataCard));\r\n\r\n  cardLikeButton.addEventListener(\"click\", () =>\r\n    likeCard(dataCard, cardLikeButton, cardLikeCount, myId)\r\n  );\r\n\r\n  return cardElement;\r\n}\r\n\r\n// Функция лайка карточки\r\nfunction likeCard(dataCard, cardLikeButton, cardLikeCount, myId) {\r\n  if (!hasMyLike(dataCard, myId)) {\r\n    addLikeRequest(dataCard)\r\n      .then((newDataCard) => {\r\n        cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n        cardLikeCount.textContent = newDataCard.likes.length;\r\n        dataCard.likes = newDataCard.likes;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  } else {\r\n    deleteLikeRequest(dataCard)\r\n      .then((newDataCard) => {\r\n        cardLikeButton.classList.remove(\"card__like-button_is-active\");\r\n        cardLikeCount.textContent = newDataCard.likes.length;\r\n        dataCard.likes = newDataCard.likes;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n}\r\n\r\n// Функция проверки лайка на карточке\r\nfunction hasMyLike(dataCard, myId) {\r\n  return dataCard.likes.some((like) => like._id === myId);\r\n}\r\n\r\nexport { createCard, likeCard };","// Функция открытия модального окна\r\nfunction openModal(popup) {\r\n  popup.classList.add(\"popup_is-opened\");\r\n\r\n  document.addEventListener(\"keydown\", closeModalByEsc);\r\n}\r\n\r\n// Функция закрытия модального окна\r\nfunction closeModal(popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n\r\n  document.removeEventListener(\"keydown\", closeModalByEsc);\r\n}\r\n\r\n// Функция закрытия модального окна по клику на оверлей\r\nfunction closeModalByOverlay(evt) {\r\n  if (evt.target === evt.currentTarget) {\r\n    closeModal(evt.target);\r\n  }\r\n}\r\n\r\n// Функция закрытия модального окна по нажатию клавиши Esc\r\nfunction closeModalByEsc(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    closeModal(document.querySelector(\".popup_is-opened\"));\r\n  }\r\n}\r\n\r\nexport { openModal, closeModal, closeModalByOverlay };","// Функция показа сообщения об ошибке\r\nfunction showInputError(\r\n    formElement,\r\n    inputElement,\r\n    errorMessage,\r\n    validationConfig\r\n  ) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  \r\n    inputElement.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validationConfig.errorClass);\r\n  }\r\n  \r\n  // Функция скрытия сообщения об ошибке\r\n  function hideInputError(formElement, inputElement, validationConfig) {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  \r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n    errorElement.textContent = \"\";\r\n  }\r\n  \r\n  // Функция проверки валидности инпута\r\n  function checkInputValidity(formElement, inputElement, validationConfig) {\r\n    if (inputElement.validity.patternMismatch) {\r\n      inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } else {\r\n      inputElement.setCustomValidity(\"\");\r\n    }\r\n  \r\n    if (!inputElement.validity.valid) {\r\n      showInputError(\r\n        formElement,\r\n        inputElement,\r\n        inputElement.validationMessage,\r\n        validationConfig\r\n      );\r\n    } else {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n    }\r\n  }\r\n  \r\n  // Функция проверки валидности формы\r\n  function hasInvalidInput(inputList) {\r\n    return inputList.some((inputElement) => {\r\n      return !inputElement.validity.valid;\r\n    });\r\n  }\r\n  \r\n  //Функция блокировки кнопки\r\n  function disableButton(buttonElement, validationConfig) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  }\r\n  \r\n  // Функция переключения доступности кнопки в зависимости от валидности инпутов\r\n  function toggleButtonState(inputList, buttonElement, validationConfig) {\r\n    if (hasInvalidInput(inputList)) {\r\n      disableButton(buttonElement, validationConfig);\r\n    } else {\r\n      buttonElement.disabled = false;\r\n      buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    }\r\n  }\r\n  \r\n  // Функция очистки ошибок валлидации\r\n  function clearValidation(formElement, validationConfig) {\r\n    const inputList = Array.from(\r\n      formElement.querySelectorAll(validationConfig.inputSelector)\r\n    );\r\n  \r\n    const buttonElement = formElement.querySelector(\r\n      validationConfig.submitButtonSelector\r\n    );\r\n  \r\n    inputList.forEach((inputElement) =>\r\n      hideInputError(formElement, inputElement, validationConfig)\r\n    );\r\n  \r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n  }\r\n  \r\n  // Функция слушателей инпутов формы\r\n  function setEventListeners(formElement, validationConfig) {\r\n    const inputList = Array.from(\r\n      formElement.querySelectorAll(validationConfig.inputSelector)\r\n    );\r\n  \r\n    const buttonElement = formElement.querySelector(\r\n      validationConfig.submitButtonSelector\r\n    );\r\n  \r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n  \r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener(\"input\", () => {\r\n        checkInputValidity(formElement, inputElement, validationConfig);\r\n        toggleButtonState(inputList, buttonElement, validationConfig);\r\n      });\r\n    });\r\n  }\r\n  \r\n  // Функция слушателей форм\r\n  function enableValidation(validationConfig) {\r\n    const formList = Array.from(\r\n      document.querySelectorAll(validationConfig.formSelector)\r\n    );\r\n  \r\n    formList.forEach((formElement) =>\r\n      setEventListeners(formElement, validationConfig)\r\n    );\r\n  }\r\n  \r\n  export { showInputError, disableButton, clearValidation, enableValidation };","import \"../pages/index.css\";\r\nimport { createCard, likeCard } from \"../components/card.js\";\r\nimport {\r\n  openModal,\r\n  closeModal,\r\n  closeModalByOverlay,\r\n} from \"../components/modal.js\";\r\nimport {\r\n  showInputError,\r\n  disableButton,\r\n  clearValidation,\r\n  enableValidation,\r\n} from \"../components/validate.js\";\r\nimport {\r\n  getMyInfoRequest,\r\n  getСardsRequest,\r\n  patchProfileRequest,\r\n  patchAvatarRequest,\r\n  checkImageLinkRequest,\r\n  postCardRequest,\r\n  deleteCardRequest,\r\n} from \"../components/api.js\";\r\n\r\n// DOM узлы\r\n// Профиль\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileImage = document.querySelector(\".profile__image\");\r\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\r\n\r\n// Карточки\r\nconst cardAddButton = document.querySelector(\".profile__add-button\");\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\n\r\n// Модальные окна\r\nconst popups = document.querySelectorAll(\".popup\");\r\nconst closeButtons = document.querySelectorAll(\".popup__close\");\r\n\r\n// Окно редактирования профиля\r\nconst profileEditPopup = document.querySelector(\".popup_type_edit\");\r\nconst profileForm = document.forms[\"edit-profile\"];\r\nconst profileNameInput = profileForm.elements.name;\r\nconst profileDescriptionInput = profileForm.elements.description;\r\nconst profileSubmitButton = profileForm.querySelector(\".popup__button\");\r\n\r\n// Окна редактирования аватара\r\nconst avatarEditPopup = document.querySelector(\".popup_type_avatar\");\r\nconst avatarForm = document.forms[\"edit-avatar\"];\r\nconst avatarLinkInput = avatarForm.elements.avatar;\r\nconst avatarSubmitButton = avatarForm.querySelector(\".popup__button\");\r\n\r\n// Окно добавления карточки\r\nconst cardAddPopup = document.querySelector(\".popup_type_new-card\");\r\nconst cardForm = document.forms[\"new-place\"];\r\nconst cardNameInput = cardForm.elements[\"place-name\"];\r\nconst cardLinkInput = cardForm.elements.link;\r\nconst cardSubmitButton = cardForm.querySelector(\".popup__button\");\r\n\r\n// Окно удаления карточки\r\nconst cardDeletePopup = document.querySelector(\".popup_type_delete\");\r\nconst cardDeleteButton = cardDeletePopup.querySelector(\".popup__button\");\r\n\r\n// Окно просмотра картинки\r\nconst cardViewPopup = document.querySelector(\".popup_type_image\");\r\nconst cardViewPopupImage = cardViewPopup.querySelector(\".popup__image\");\r\nconst cardViewPopupCaption = cardViewPopup.querySelector(\".popup__caption\");\r\n\r\n// Объект настроек валидации\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\n// Id моего профиля\r\nlet myId;\r\n\r\n// Id удаляемой карточки\r\nlet cardDeleteId;\r\n\r\n// Функция процесса загрузки\r\nfunction renderLoading(isLoading, buttonElement) {\r\n  if (isLoading) {\r\n    buttonElement.textContent = \"Сохранение...\";\r\n  } else {\r\n    buttonElement.textContent = \"Сохранить\";\r\n  }\r\n}\r\n\r\n// Функция редактирования профиля\r\nfunction handleProfileFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true, profileSubmitButton);\r\n\r\n  patchProfileRequest(profileNameInput.value, profileDescriptionInput.value)\r\n    .then((dataProfile) => {\r\n      profileName.textContent = dataProfile.name;\r\n      profileDescription.textContent = dataProfile.about;\r\n      closeModal(profileEditPopup);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => renderLoading(false, profileSubmitButton));\r\n}\r\n\r\n// Функция редактирования аватара\r\nfunction handleAvatarFormSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  checkImageLinkRequest(avatarLinkInput.value)\r\n    .then(() => {\r\n      renderLoading(true, avatarSubmitButton);\r\n      patchAvatarRequest(avatarLinkInput.value)\r\n        .then((dataAvatar) => {\r\n          profileImage.style.backgroundImage = `url(${dataAvatar.avatar})`;\r\n          closeModal(avatarEditPopup);\r\n        })\r\n        .catch((err) => console.log(err))\r\n        .finally(() => renderLoading(false, avatarSubmitButton));\r\n    })\r\n    .catch((error) => {\r\n      showInputError(avatarForm, avatarLinkInput, error, validationConfig);\r\n      disableButton(avatarSubmitButton, validationConfig);\r\n    });\r\n}\r\n\r\n// Функция добавления карточки из формы\r\nfunction handleCardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true, cardSubmitButton);\r\n\r\n  postCardRequest(cardNameInput.value, cardLinkInput.value)\r\n    .then((dataCard) => {\r\n      cardsContainer.prepend(\r\n        createCard(dataCard, openDeletePopup, openImagePopup, likeCard, myId)\r\n      );\r\n      closeModal(cardAddPopup);\r\n      cardForm.reset();\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => renderLoading(false, cardSubmitButton));\r\n}\r\n\r\n// Функция открытия картинки карточки\r\nfunction openImagePopup(dataCard) {\r\n  cardViewPopupImage.src = dataCard.link;\r\n  cardViewPopupImage.alt = dataCard.name;\r\n  cardViewPopupCaption.textContent = dataCard.name;\r\n  openModal(cardViewPopup);\r\n}\r\n\r\n// Функция открытия попапа удаления карточки\r\nfunction openDeletePopup(dataCard) {\r\n  cardDeleteId = dataCard._id;\r\n  openModal(cardDeletePopup);\r\n}\r\n\r\n// Функция удаления карточки\r\nfunction handleCardDelete(evt) {\r\n  evt.preventDefault();\r\n\r\n  deleteCardRequest(cardDeleteId)\r\n    .then(() => {\r\n      document.querySelector(`[data-card-id=\"${cardDeleteId}\"]`).remove();\r\n      cardDeleteId = \"\";\r\n      closeModal(cardDeletePopup);\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\n// Загрузка информации о пользователе и карточках\r\nPromise.all([getMyInfoRequest(), getСardsRequest()])\r\n  .then(([me, dataCards]) => {\r\n    profileName.textContent = me.name;\r\n    profileDescription.textContent = me.about;\r\n    profileImage.style.backgroundImage = `url(${me.avatar})`;\r\n    myId = me._id;\r\n\r\n    dataCards.forEach((dataCard) => {\r\n      cardsContainer.append(\r\n        createCard(dataCard, openDeletePopup, openImagePopup, likeCard, myId)\r\n      );\r\n    });\r\n  })\r\n  .catch((err) => console.log(err));\r\n\r\n// Активация валидации\r\nenableValidation(validationConfig);\r\n\r\n// Слушатели открытия модальных окон\r\n// Окно редактирования профиля\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n  profileNameInput.value = profileName.textContent;\r\n  profileDescriptionInput.value = profileDescription.textContent;\r\n  clearValidation(profileForm, validationConfig);\r\n  openModal(profileEditPopup);\r\n});\r\n\r\n// Окно редактирования аватара\r\nprofileImage.addEventListener(\"click\", () => {\r\n  avatarForm.reset();\r\n  clearValidation(avatarForm, validationConfig);\r\n  openModal(avatarEditPopup);\r\n});\r\n\r\n// Окно добавления карточки\r\ncardAddButton.addEventListener(\"click\", () => {\r\n  cardForm.reset();\r\n  clearValidation(cardForm, validationConfig);\r\n  openModal(cardAddPopup);\r\n});\r\n\r\n// Слушатели закрытия модальных окон\r\n// По клику на кнопку закрытия\r\ncloseButtons.forEach((button) => {\r\n  button.addEventListener(\"click\", () => {\r\n    closeModal(button.closest(\".popup\"));\r\n  });\r\n});\r\n\r\n// По клику на оверлей\r\npopups.forEach((popup) => {\r\n  popup.addEventListener(\"mousedown\", closeModalByOverlay);\r\n});\r\n\r\n// Слушатель редактирования профиля\r\nprofileForm.addEventListener(\"submit\", handleProfileFormSubmit);\r\n\r\n// Слушатель редактирования аватара\r\navatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\r\n\r\n// Слушатель добавления карточки\r\ncardForm.addEventListener(\"submit\", handleCardFormSubmit);\r\n\r\n// Слушатель удаления карточки\r\ncardDeleteButton.addEventListener(\"click\", handleCardDelete);"],"names":["handleResponse","res","ok","json","Promise","reject","concat","status","request","url","method","fetch","configAPI","baseUrl","headers","then","bodyRequest","data","body","JSON","stringify","cardTemplate","document","querySelector","content","createCard","dataCard","openDeletePopup","openImagePopup","likeCard","myId","cardElement","cloneNode","cardTitle","cardImage","cardLikeButton","cardLikeCount","cardDeleteButton","textContent","name","src","link","alt","likes","length","hasMyLike","classList","add","remove","owner","_id","dataset","cardId","addEventListener","deleteLikeRequest","newDataCard","catch","err","console","log","addLikeRequest","some","like","openModal","popup","closeModalByEsc","closeModal","removeEventListener","closeModalByOverlay","evt","target","currentTarget","key","showInputError","formElement","inputElement","errorMessage","validationConfig","errorElement","id","inputErrorClass","errorClass","hideInputError","disableButton","buttonElement","disabled","inactiveButtonClass","toggleButtonState","inputList","validity","valid","hasInvalidInput","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","cardDeleteId","profileName","profileDescription","profileImage","profileEditButton","cardAddButton","cardsContainer","popups","closeButtons","profileEditPopup","profileForm","forms","profileNameInput","elements","profileDescriptionInput","description","profileSubmitButton","avatarEditPopup","avatarForm","avatarLinkInput","avatar","avatarSubmitButton","cardAddPopup","cardForm","cardNameInput","cardLinkInput","cardSubmitButton","cardDeletePopup","cardViewPopup","cardViewPopupImage","cardViewPopupCaption","formSelector","renderLoading","isLoading","all","_ref","_ref2","me","dataCards","about","style","backgroundImage","append","patternMismatch","setCustomValidity","validationMessage","checkInputValidity","setEventListeners","enableValidation","value","reset","button","closest","nameProfile","descriptionProfile","preventDefault","dataProfile","finally","get","includes","resolve","avatarLink","dataAvatar","error","nameCard","linkCard","prepend"],"sourceRoot":""}